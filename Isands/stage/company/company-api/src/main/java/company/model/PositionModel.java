/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package company.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Position service. Represents a row in the &quot;Company_Position&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>company.model.impl.PositionModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>company.model.impl.PositionImpl</code>.
 * </p>
 *
 * @author sam
 * @see Position
 * @generated
 */
@ProviderType
public interface PositionModel extends BaseModel<Position> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a position model instance should use the {@link Position} interface instead.
	 */

	/**
	 * Returns the primary key of this position.
	 *
	 * @return the primary key of this position
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this position.
	 *
	 * @param primaryKey the primary key of this position
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this position.
	 *
	 * @return the uuid of this position
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this position.
	 *
	 * @param uuid the uuid of this position
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the position ID of this position.
	 *
	 * @return the position ID of this position
	 */
	public long getPositionId();

	/**
	 * Sets the position ID of this position.
	 *
	 * @param positionId the position ID of this position
	 */
	public void setPositionId(long positionId);

	/**
	 * Returns the name of this position.
	 *
	 * @return the name of this position
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this position.
	 *
	 * @param name the name of this position
	 */
	public void setName(String name);

	/**
	 * Returns the archive of this position.
	 *
	 * @return the archive of this position
	 */
	public boolean getArchive();

	/**
	 * Returns <code>true</code> if this position is archive.
	 *
	 * @return <code>true</code> if this position is archive; <code>false</code> otherwise
	 */
	public boolean isArchive();

	/**
	 * Sets whether this position is archive.
	 *
	 * @param archive the archive of this position
	 */
	public void setArchive(boolean archive);

}